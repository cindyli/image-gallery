How to install:
1. First of all, make sure PHP web server and git are installed. Moreover, infusion source code is pulled out locally.

2. Retrieve image gallery demo into :
   cd [webserver_document_root]         -- or any folder underneath your web server document root
   git clone git://github.com/cindyli/image-gallery.git

3. Create an empty folder "temp" underneath "image-gallery" and grant it 777 permissoin. This is where all the uploaded images will reside.
   cd image-gallery
   mkdir temp
   chmod 777 temp

4. Modified the path in the listed scripts pointing to your infusion source code.
   uploader.html   -  line 7 - 34
   js/uploader.js  -  line 12, 21, 22 

5. That's all. Now access via (just an example): http://localhost/image-gallery/uploader.html

How it looks like:
This image gallery uploader demo is composed by 2 parts: the multi-file uploader at left and an image viewer at right. 

The work flow:
1. When "upload" button is clicked: the html page sends the upload request to the server along with a session token. This session token is a unique 13-character string that is generated by front-end javascript. It helps the php server to distinguish the upload requests from different clients. 

2. Once the PHP server receives the uploaded image, it looks up in the "temp" directory for the sub-directory that is named after the sent-in session token. If the sub-directory does not exist, creates a new. The uploaded images are placed into the sub-directory, then the server sends back the url of the uploaded image. The client retrives the url and adds it to the image viewer. 

3. If anything goes wrong at PHP server, for instance, no file is received, session token is not provided, invalid file extension, or temp/ folder does not exist, the server returns a error message with http status code 400. The client displays the error on the page along with the name of the corresponding file.

A few constraints performed at PHP server:
1. The server removes the temporary folder created for each session that are inactive for over an hour. This is performed in uploader.php as the first thing whenever it's called.

2. For security reason, the server only allows the upload of these file types: jpg, jpeg, gif, png, tif, tiff

3. When the file with the same name is uploaded twice, a unique incremental number is appended to the second file name to ensure the uniqueness of each uploaded image.
   for instance, "1.jpg" will be renamed to "1-1.jpg" at the second upload.
   
Questions:
1. in uploader.html, line 37, "styles.css" is linked in at "the uploader demo" section, should it be moved to the top of the script to be together with other .css
